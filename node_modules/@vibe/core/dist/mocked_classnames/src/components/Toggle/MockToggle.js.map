{"version":3,"file":"MockToggle.js","sources":["../../../../../src/components/Toggle/MockToggle.tsx"],"sourcesContent":["import ToggleText from \"./ToggleText\";\nimport cx from \"classnames\";\nimport React, { type FC } from \"react\";\nimport type VibeComponentProps from \"../../types/VibeComponentProps\";\nimport styles from \"./MockToggle.module.scss\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { type ToggleSize } from \"./Toggle.types\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\n\nexport interface MockToggleProps extends VibeComponentProps {\n  /**\n   * If true, hides the on/off labels.\n   */\n  areLabelsHidden?: boolean;\n  /**\n   * If true, the toggle is in the \"on\" state.\n   */\n  checked?: boolean;\n  /**\n   * If true, removes the horizontal spacing around the toggle.\n   */\n  noSpacing?: boolean;\n  /**\n   * The text displayed when the toggle is in the \"off\" state.\n   */\n  offOverrideText?: string;\n  /**\n   * The text displayed when the toggle is in the \"on\" state.\n   */\n  onOverrideText?: string;\n  /**\n   * Class name applied when the toggle is selected.\n   */\n  selectedClassName?: string;\n  /**\n   * If true, disables the toggle.\n   */\n  disabled: boolean;\n  /**\n   * The size of the toggle.\n   */\n  size?: ToggleSize;\n}\n\nexport const MockToggle: FC<MockToggleProps> = ({\n  areLabelsHidden,\n  checked,\n  noSpacing,\n  offOverrideText,\n  onOverrideText,\n  className,\n  selectedClassName,\n  disabled,\n  size = \"medium\"\n}) => (\n  <>\n    {areLabelsHidden ? null : <ToggleText disabled={disabled}>{offOverrideText}</ToggleText>}\n    <div\n      className={cx(styles.toggle, getStyle(styles, size), className, {\n        [cx(styles.selected, selectedClassName)]: checked,\n        [styles.notSelected]: !checked,\n        [styles.disabled]: disabled,\n        [styles.noSpacing]: noSpacing\n      })}\n      aria-hidden=\"true\"\n      data-testid={getTestId(ComponentDefaultTestId.TOGGLE)}\n    />\n    {areLabelsHidden ? null : <ToggleText disabled={disabled}>{onOverrideText}</ToggleText>}\n  </>\n);\n"],"names":["MockToggle","_ref","areLabelsHidden","checked","noSpacing","onOverrideText","className","selectedClassName","disabled","_ref$size","size","React","createElement","Fragment","ToggleText","offOverrideText","cx","styles","toggle","getStyle","_defineProperty","selected","notSelected","getTestId","ComponentDefaultTestId","TOGGLE"],"mappings":"wYA6CaA,EAAkC,SAAxBC,GAAA,IACrBC,EAAeD,EAAfC,gBACAC,EAAOF,EAAPE,QACAC,EAASH,EAATG,UAEAC,EAAcJ,EAAdI,eACAC,EAASL,EAATK,UACAC,EAAiBN,EAAjBM,kBACAC,EAAQP,EAARO,SAAQC,EAAAR,EACRS,KAAAA,OAAO,IAAHD,EAAG,SAAQA,EAAA,OAEfE,EAAAC,cAAAD,EAAAE,SAAA,KACGX,EAAkB,KAAOS,EAACC,cAAAE,GAAWN,SAAUA,GARnCP,EAAfc,iBASEJ,EAAAC,cAAA,MAAA,CACEN,UAAWU,EAAGC,EAAOC,OAAQC,EAASF,EAAQP,GAAOJ,EAASc,EAAAA,EAAAA,EAAAA,EAC3DJ,CAAAA,EAAAA,EAAGC,EAAOI,SAAUd,GAAqBJ,GACzCc,EAAOK,aAAenB,GACtBc,EAAOT,SAAWA,GAClBS,EAAOb,UAAYA,IACpB,cACU,OACC,cAAAmB,EAAUC,EAAuBC,UAE/CvB,EAAkB,KAAOS,EAACC,cAAAE,EAAW,CAAAN,SAAUA,GAAWH,GAC1D"}