{"version":3,"file":"DropdownMultiSelectController.js","sources":["../../../../../../src/components/DropdownNew/modes/DropdownMultiSelectController.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { type DropdownMultiControllerProps } from \"../Dropdown.types\";\nimport useDropdownMultiSelect from \"../hooks/useDropdownMultiSelect\";\nimport { type BaseListItemData } from \"../../BaseListItem\";\nimport { type DropdownContextProps } from \"../context/DropdownContext.types\";\nimport DropdownWrapperUI from \"../components/DropdownWrapperUI\";\n\nconst DropdownMultiSelectController = <Item extends BaseListItemData<Record<string, unknown>>>(\n  props: DropdownMultiControllerProps<Item>\n) => {\n  const {\n    options,\n    isMenuOpen: isMenuOpenProp,\n    autoFocus,\n    defaultValue,\n    value,\n    onChange,\n    onMenuOpen,\n    onMenuClose,\n    onOptionSelect,\n    clearable = true,\n    showSelectedOptions = true,\n    filterOption,\n    dropdownRef,\n    onClear,\n    onOptionRemove,\n    onFocus,\n    onBlur,\n    loading = false,\n    size = \"medium\"\n  } = props;\n\n  const initialMultiSelectedItems = Array.isArray(defaultValue) ? defaultValue : [];\n  const [multiSelectedItemsState, setMultiSelectedItemsState] = useState<Item[]>(initialMultiSelectedItems);\n  const [isFocused, setIsFocused] = useState(false);\n\n  const {\n    isOpen,\n    highlightedIndex,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    reset: hookReset,\n    toggleMenu,\n    filteredOptions,\n    selectedItems: hookSelectedItems,\n    addSelectedItem: hookAddSelectedItem,\n    removeSelectedItem: hookRemoveSelectedItem,\n    getDropdownProps\n  } = useDropdownMultiSelect<Item>(\n    options,\n    multiSelectedItemsState,\n    setMultiSelectedItemsState,\n    isMenuOpenProp,\n    autoFocus,\n    defaultValue,\n    value,\n    onChange,\n    onMenuOpen,\n    onMenuClose,\n    onOptionSelect,\n    showSelectedOptions,\n    filterOption\n  );\n\n  const contextValue: DropdownContextProps<Item> = {\n    ...props,\n    isOpen,\n    inputValue: null,\n    highlightedIndex,\n    selectedItem: undefined,\n    selectedItems: hookSelectedItems || [],\n    filteredOptions,\n    clearable,\n    getToggleButtonProps: (toggleOptions?: Record<string, any>) => {\n      return getToggleButtonProps({\n        ...(toggleOptions || {}),\n        disabled: props.readOnly || props.disabled,\n        onFocus: (event: React.FocusEvent<HTMLDivElement>) => {\n          setIsFocused(true);\n          onFocus?.(event);\n        },\n        onBlur: (event: React.FocusEvent<HTMLDivElement>) => {\n          setIsFocused(false);\n          onBlur?.(event);\n        }\n      });\n    },\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    reset: hookReset,\n    getDropdownProps,\n    contextOnClear: () => {\n      hookReset();\n      if (value === undefined) {\n        setMultiSelectedItemsState([]);\n      }\n      onClear?.();\n    },\n    contextOnOptionRemove: (option: Item) => {\n      if (hookRemoveSelectedItem) {\n        hookRemoveSelectedItem(option);\n      }\n      onOptionRemove?.(option);\n    },\n    addSelectedItem: hookAddSelectedItem,\n    removeSelectedItem: hookRemoveSelectedItem,\n    size,\n    toggleMenu,\n    isFocused,\n    loading\n  };\n\n  return <DropdownWrapperUI contextValue={contextValue} dropdownRef={dropdownRef} />;\n};\n\nexport default DropdownMultiSelectController;\n"],"names":["DropdownMultiSelectController","props","options","isMenuOpenProp","isMenuOpen","autoFocus","defaultValue","value","onChange","onMenuOpen","onMenuClose","onOptionSelect","_props$clearable","clearable","_props$showSelectedOp","showSelectedOptions","filterOption","dropdownRef","onClear","onOptionRemove","onFocus","onBlur","_props$loading","loading","_props$size","size","_useState","useState","Array","isArray","_useState2","_slicedToArray","multiSelectedItemsState","setMultiSelectedItemsState","_useState3","_useState4","isFocused","setIsFocused","_useDropdownMultiSele","useDropdownMultiSelect","isOpen","highlightedIndex","getToggleButtonProps","getLabelProps","getMenuProps","getItemProps","hookReset","reset","toggleMenu","filteredOptions","hookSelectedItems","selectedItems","hookAddSelectedItem","addSelectedItem","hookRemoveSelectedItem","removeSelectedItem","getDropdownProps","contextValue","inputValue","selectedItem","undefined","toggleOptions","disabled","readOnly","event","contextOnClear","contextOnOptionRemove","option","React","createElement","DropdownWrapperUI"],"mappings":"0NAOA,IAAMA,EAAgC,SACpCC,GAEA,IACEC,EAmBED,EAnBFC,QACYC,EAkBVF,EAlBFG,WACAC,EAiBEJ,EAjBFI,UACAC,EAgBEL,EAhBFK,aACAC,EAeEN,EAfFM,MACAC,EAcEP,EAdFO,SACAC,EAaER,EAbFQ,WACAC,EAYET,EAZFS,YACAC,EAWEV,EAXFU,eAAcC,EAWZX,EAVFY,UAAAA,OAAY,IAAHD,GAAOA,EAAAE,EAUdb,EATFc,oBAAAA,OAAsB,IAAHD,GAAOA,EAC1BE,EAQEf,EARFe,aACAC,EAOEhB,EAPFgB,YACAC,EAMEjB,EANFiB,QACAC,EAKElB,EALFkB,eACAC,EAIEnB,EAJFmB,QACAC,EAGEpB,EAHFoB,OAAMC,EAGJrB,EAFFsB,QAAAA,OAAU,IAAHD,GAAQA,EAAAE,EAEbvB,EADFwB,KAAAA,OAAO,IAAHD,EAAG,SAAQA,EAIjBE,EAA8DC,EAD5BC,MAAMC,QAAQvB,GAAgBA,EAAe,IAC0BwB,EAAAC,EAAAL,EAAA,GAAlGM,EAAuBF,EAAA,GAAEG,EAA0BH,EAAA,GAC1DI,EAAkCP,GAAS,GAAMQ,EAAAJ,EAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAE9BG,EAcIC,EACFrC,EACA8B,EACAC,EACA9B,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAI,EACAC,GA1BAwB,EAAMF,EAANE,OACAC,EAAgBH,EAAhBG,iBACAC,EAAoBJ,EAApBI,qBACAC,EAAaL,EAAbK,cACAC,EAAYN,EAAZM,aACAC,EAAYP,EAAZO,aACOC,EAASR,EAAhBS,MACAC,EAAUV,EAAVU,WACAC,EAAeX,EAAfW,gBACeC,EAAiBZ,EAAhCa,cACiBC,EAAmBd,EAApCe,gBACoBC,EAAsBhB,EAA1CiB,mBACAC,EAAgBlB,EAAhBkB,iBAiBIC,iCACDxD,GAAK,CACRuC,OAAAA,EACAkB,WAAY,KACZjB,iBAAAA,EACAkB,kBAAcC,EACdT,cAAeD,GAAqB,GACpCD,gBAAAA,EACApC,UAAAA,EACA6B,qBAAsB,SAACmB,GACrB,OAAOnB,iCACDmB,GAAiB,CAAA,GACrB,CAAAC,SAAU7D,EAAM8D,UAAY9D,EAAM6D,SAClC1C,QAAS,SAAC4C,GACR3B,GAAa,GACbjB,SAAAA,EAAU4C,EACX,EACD3C,OAAQ,SAAC2C,GACP3B,GAAa,GACbhB,SAAAA,EAAS2C,EACX,IAEH,EACDrB,cAAAA,EACAC,aAAAA,EACAC,aAAAA,EACAE,MAAOD,EACPU,iBAAAA,EACAS,eAAgB,WACdnB,SACcc,IAAVrD,GACF0B,EAA2B,IAE7Bf,SAAAA,GACD,EACDgD,sBAAuB,SAACC,GAClBb,GACFA,EAAuBa,GAEzBhD,SAAAA,EAAiBgD,EAClB,EACDd,gBAAiBD,EACjBG,mBAAoBD,EACpB7B,KAAAA,EACAuB,WAAAA,EACAZ,UAAAA,EACAb,QAAAA,IAGF,OAAO6C,EAAAC,cAACC,EAAiB,CAACb,aAAcA,EAAcxC,YAAaA,GACrE"}