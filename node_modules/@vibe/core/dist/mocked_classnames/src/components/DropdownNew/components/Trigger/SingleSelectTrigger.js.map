{"version":3,"file":"SingleSelectTrigger.js","sources":["../../../../../../../src/components/DropdownNew/components/Trigger/SingleSelectTrigger.tsx"],"sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport { BaseListItem, type BaseListItemData } from \"../../../BaseListItem\";\nimport DropdownInput from \"./DropdownInput\";\nimport styles from \"./Trigger.module.scss\";\nimport { useDropdownContext } from \"../../context/DropdownContext\";\nimport { Flex } from \"../../../Flex\";\nimport TriggerActions from \"./TriggerActions\";\nimport { getStyle } from \"../../../../helpers/typesciptCssModulesHelper\";\n\nconst SingleSelectTrigger = () => {\n  const {\n    inputValue,\n    selectedItem,\n    searchable,\n    size,\n    valueRenderer,\n    isFocused,\n    getToggleButtonProps,\n    disabled,\n    label,\n    getLabelProps,\n    ariaLabel\n  } = useDropdownContext<BaseListItemData>();\n\n  return (\n    <Flex justify=\"space-between\" align=\"center\">\n      <div\n        className={cx(styles.triggerWrapper, getStyle(styles, size))}\n        {...(!searchable\n          ? getToggleButtonProps({\n              \"aria-haspopup\": \"dialog\",\n              \"aria-labelledby\": label ? getLabelProps().id : undefined,\n              \"aria-label\": ariaLabel || (label ? undefined : getLabelProps()?.id)\n            })\n          : {})}\n      >\n        <DropdownInput />\n\n        {!inputValue && selectedItem && (\n          <div\n            className={cx(\n              styles.selectedItem,\n              {\n                [styles.faded]: isFocused && searchable\n              },\n              getStyle(styles, size)\n            )}\n          >\n            <BaseListItem\n              component=\"div\"\n              itemRenderer={valueRenderer}\n              size={size}\n              readOnly\n              item={{\n                ...selectedItem,\n                disabled,\n                startElement: selectedItem.startElement?.type === \"indent\" ? undefined : selectedItem.startElement\n              }}\n            />\n          </div>\n        )}\n      </div>\n      <TriggerActions />\n    </Flex>\n  );\n};\n\nexport default SingleSelectTrigger;\n"],"names":["SingleSelectTrigger","_useDropdownContext","useDropdownContext","inputValue","selectedItem","searchable","size","valueRenderer","isFocused","getToggleButtonProps","disabled","label","getLabelProps","ariaLabel","React","createElement","Flex","justify","align","Object","assign","className","cx","styles","triggerWrapper","getStyle","id","undefined","_a","DropdownInput","_defineProperty","faded","BaseListItem","component","itemRenderer","readOnly","item","startElement","_b","type","TriggerActions"],"mappings":"8dAUA,IAAMA,EAAsB,mBAC1BC,EAYIC,IAXFC,EAAUF,EAAVE,WACAC,EAAYH,EAAZG,aACAC,EAAUJ,EAAVI,WACAC,EAAIL,EAAJK,KACAC,EAAaN,EAAbM,cACAC,EAASP,EAATO,UACAC,EAAoBR,EAApBQ,qBACAC,EAAQT,EAARS,SACAC,EAAKV,EAALU,MACAC,EAAaX,EAAbW,cACAC,EAASZ,EAATY,UAGF,OACEC,EAACC,cAAAC,EAAK,CAAAC,QAAQ,gBAAgBC,MAAM,UAClCJ,EAAAC,cAAA,MAAAI,OAAAC,OAAA,CACEC,UAAWC,EAAGC,EAAOC,eAAgBC,EAASF,EAAQjB,KAChDD,EAMF,CAAA,EALAI,EAAqB,CACnB,gBAAiB,SACjB,kBAAmBE,EAAQC,IAAgBc,QAAKC,EAChD,aAAcd,IAAcF,GAAmC,QAAfiB,EAAAhB,WAAe,IAAAgB,OAA3BD,EAA2BC,EAAEF,OAIvEZ,EAAAC,cAACc,EAAgB,OAEf1B,GAAcC,GACdU,EAAAC,cAAA,MAAA,CACEM,UAAWC,EACTC,EAAOnB,aAAY0B,EAAA,CAAA,EAEhBP,EAAOQ,MAAQvB,GAAaH,GAE/BoB,EAASF,EAAQjB,KAGnBQ,EAACC,cAAAiB,GACCC,UAAU,MACVC,aAAc3B,EACdD,KAAMA,EACN6B,UAAQ,EACRC,KACKjB,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EAAAhB,GACH,CAAAM,SAAAA,EACA2B,aAAkD,oBAApCC,EAAAlC,EAAaiC,mCAAcE,WAAoBZ,EAAYvB,EAAaiC,mBAMhGvB,EAAAC,cAACyB,EAAc,MAGrB"}