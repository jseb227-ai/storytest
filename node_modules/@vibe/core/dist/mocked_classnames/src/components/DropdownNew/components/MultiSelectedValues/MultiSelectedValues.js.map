{"version":3,"file":"MultiSelectedValues.js","sources":["../../../../../../../src/components/DropdownNew/components/MultiSelectedValues/MultiSelectedValues.tsx"],"sourcesContent":["import React, { useRef, useMemo, createRef } from \"react\";\nimport { type BaseListItemData } from \"../../../BaseListItem\";\nimport { Chips } from \"../../../Chips\";\nimport { Flex } from \"../../../Flex\";\nimport { DialogContentContainer } from \"../../../DialogContentContainer\";\nimport Dialog from \"../../../Dialog/Dialog\";\nimport useItemsOverflow from \"../../../../hooks/useItemsOverflow/useItemsOverflow\";\nimport styles from \"./MultiSelectedValues.module.scss\";\nimport cx from \"classnames\";\nimport DropdownChip from \"../Trigger/DropdownChip\";\n\ntype MultiSelectedValuesProps<Item> = {\n  selectedItems: Item[];\n  onRemove: (item: Item) => void;\n  renderInput?: () => React.ReactNode;\n  disabled?: boolean;\n  readOnly?: boolean;\n};\n\nfunction MultiSelectedValues<Item extends BaseListItemData<Record<string, unknown>>>({\n  selectedItems,\n  onRemove,\n  renderInput,\n  disabled,\n  readOnly\n}: MultiSelectedValuesProps<Item>) {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const deductedSpaceRef = useRef<HTMLDivElement>(null);\n\n  const itemRefs = useMemo(() => selectedItems.map(() => createRef<HTMLDivElement>()), [selectedItems]);\n\n  const visibleCount = useItemsOverflow({\n    containerRef,\n    itemRefs,\n    gap: 4,\n    deductedSpaceRef\n  });\n\n  const { hiddenItems, hiddenCount } = useMemo(() => {\n    const hiddenItems = selectedItems.length > visibleCount ? selectedItems.slice(visibleCount) : [];\n    return {\n      hiddenItems,\n      hiddenCount: hiddenItems.length\n    };\n  }, [selectedItems, visibleCount]);\n\n  const dialogContent = useMemo(() => {\n    return () => (\n      <DialogContentContainer>\n        <Flex direction=\"column\" gap=\"xs\" align=\"start\" className={styles.hiddenChipsDialog}>\n          {hiddenItems.map(item => {\n            return (\n              <DropdownChip\n                key={`dropdown-chip-dialog-${item.value}`}\n                item={item}\n                onDelete={() => onRemove(item)}\n                className={styles.dialogChip}\n                disabled={disabled}\n                readOnly={readOnly}\n              />\n            );\n          })}\n        </Flex>\n      </DialogContentContainer>\n    );\n  }, [hiddenItems, onRemove, disabled, readOnly]);\n\n  const chipElements = useMemo(() => {\n    return selectedItems.map((item, index) => {\n      const isVisible = index < visibleCount;\n\n      return (\n        <div\n          key={`dropdown-chip-visible-${item.value}`}\n          ref={itemRefs[index]}\n          className={cx({ [styles.hiddenChip]: !isVisible })}\n          aria-hidden={!isVisible}\n          data-testid={`dropdown-chip-${item.value}`}\n        >\n          <DropdownChip item={item} onDelete={() => onRemove(item)} disabled={disabled} readOnly={readOnly} />\n        </div>\n      );\n    });\n  }, [selectedItems, visibleCount, onRemove, itemRefs, disabled, readOnly]);\n\n  if (!selectedItems?.length) return null;\n\n  return (\n    <Flex align=\"center\" wrap={false} gap=\"xs\" ref={containerRef} className={styles.containerWrapper}>\n      {chipElements}\n\n      <Flex ref={deductedSpaceRef} gap=\"xs\">\n        {hiddenCount > 0 && (\n          <div\n            onClick={e => {\n              e.stopPropagation();\n            }}\n            onKeyDown={e => {\n              e.stopPropagation();\n            }}\n            onMouseDown={e => {\n              e.stopPropagation();\n            }}\n          >\n            <Dialog\n              content={dialogContent}\n              showTrigger={[\"click\", \"enter\"]}\n              hideTrigger={[\"clickoutside\", \"enter\"]}\n              position=\"bottom\"\n              moveBy={{ main: 4 }}\n              hideWhenReferenceHidden\n              addKeyboardHideShowTriggersByDefault\n            >\n              <Chips\n                label={`+ ${hiddenCount}`}\n                readOnly\n                noMargin\n                ariaLabel={`+${hiddenCount}. ${selectedItems.length - hiddenCount} items are visible out of ${\n                  selectedItems.length\n                }`}\n                data-testid=\"dropdown-overflow-counter\"\n                className={styles.overflowCounter}\n                onClick={() => {}}\n                onMouseDown={e => {\n                  e.preventDefault();\n                }}\n              />\n            </Dialog>\n          </div>\n        )}\n        {renderInput && <div className={styles.inputWrapper}>{renderInput()}</div>}\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default MultiSelectedValues;\n"],"names":["MultiSelectedValues","_ref","selectedItems","onRemove","renderInput","disabled","readOnly","containerRef","useRef","deductedSpaceRef","itemRefs","useMemo","map","createRef","visibleCount","useItemsOverflow","gap","_useMemo","hiddenItems","length","slice","hiddenCount","dialogContent","React","DialogContentContainer","createElement","Flex","direction","align","className","styles","hiddenChipsDialog","item","DropdownChip","key","concat","value","onDelete","dialogChip","chipElements","index","isVisible","ref","cx","_defineProperty","hiddenChip","wrap","containerWrapper","onClick","e","stopPropagation","onKeyDown","onMouseDown","Dialog","content","showTrigger","hideTrigger","position","moveBy","main","hideWhenReferenceHidden","addKeyboardHideShowTriggersByDefault","Chips","label","noMargin","ariaLabel","overflowCounter","preventDefault","inputWrapper"],"mappings":"ghBAmBA,SAASA,EAAmBC,GAMK,IAL/BC,EAAaD,EAAbC,cACAC,EAAQF,EAARE,SACAC,EAAWH,EAAXG,YACAC,EAAQJ,EAARI,SACAC,EAAQL,EAARK,SAEMC,EAAeC,EAAuB,MACtCC,EAAmBD,EAAuB,MAE1CE,EAAWC,GAAQ,WAAA,OAAMT,EAAcU,KAAI,WAAA,OAAMC,SAA8B,CAACX,IAEhFY,EAAeC,EAAiB,CACpCR,aAAAA,EACAG,SAAAA,EACAM,IAAK,EACLP,iBAAAA,IAGFQ,EAAqCN,GAAQ,WAC3C,IAAMO,EAAchB,EAAciB,OAASL,EAAeZ,EAAckB,MAAMN,GAAgB,GAC9F,MAAO,CACLI,YAAAA,EACAG,YAAaH,EAAYC,OAE7B,GAAG,CAACjB,EAAeY,IANXI,EAAWD,EAAXC,YAAaG,EAAWJ,EAAXI,YAQfC,EAAgBX,GAAQ,WAC5B,OAAO,WAAA,OACLY,gBAACC,EAAsB,KACrBD,EAACE,cAAAC,EAAK,CAAAC,UAAU,SAASX,IAAI,KAAKY,MAAM,QAAQC,UAAWC,EAAOC,mBAC/Db,EAAYN,KAAI,SAAAoB,GACf,OACET,EAACE,cAAAQ,GACCC,4BAAGC,OAA0BH,EAAKI,OAClCJ,KAAMA,EACNK,SAAU,WAAA,OAAMlC,EAAS6B,EAAK,EAC9BH,UAAWC,EAAOQ,WAClBjC,SAAUA,EACVC,SAAUA,GAGf,MAIR,GAAE,CAACY,EAAaf,EAAUE,EAAUC,IAE/BiC,EAAe5B,GAAQ,WAC3B,OAAOT,EAAcU,KAAI,SAACoB,EAAMQ,GAC9B,IAAMC,EAAoB3B,EAAR0B,EAElB,OACEjB,EACEE,cAAA,MAAA,CAAAS,6BAAGC,OAA2BH,EAAKI,OACnCM,IAAKhC,EAAS8B,GACdX,UAAWc,EAAEC,EAAId,CAAAA,EAAAA,EAAOe,YAAcJ,IAAY,eACpCA,EAAS,cAAAN,iBAAAA,OACOH,EAAKI,QAEnCb,EAACE,cAAAQ,EAAa,CAAAD,KAAMA,EAAMK,SAAU,WAAA,OAAMlC,EAAS6B,EAAK,EAAE3B,SAAUA,EAAUC,SAAUA,IAG9F,GACF,GAAG,CAACJ,EAAeY,EAAcX,EAAUO,EAAUL,EAAUC,IAE/D,OAAKJ,aAAA,EAAAA,EAAeiB,QAGlBI,EAACE,cAAAC,EAAK,CAAAE,MAAM,SAASkB,MAAM,EAAO9B,IAAI,KAAK0B,IAAKnC,EAAcsB,UAAWC,EAAOiB,kBAC7ER,EAEDhB,EAACE,cAAAC,GAAKgB,IAAKjC,EAAkBO,IAAI,MAC9BK,EAAc,GACbE,uBACEyB,QAAS,SAAAC,GACPA,EAAEC,iBACH,EACDC,UAAW,SAAAF,GACTA,EAAEC,iBACH,EACDE,YAAa,SAAAH,GACXA,EAAEC,iBACJ,GAEA3B,EAAAE,cAAC4B,EACC,CAAAC,QAAShC,EACTiC,YAAa,CAAC,QAAS,SACvBC,YAAa,CAAC,eAAgB,SAC9BC,SAAS,SACTC,OAAQ,CAAEC,KAAM,GAChBC,2BACAC,sCAAoC,GAEpCtC,EAACE,cAAAqC,GACCC,MAAK5B,KAAAA,OAAOd,GACZf,UAAQ,EACR0D,UACA,EAAAC,cAAS9B,OAAMd,EAAWc,MAAAA,OAAKjC,EAAciB,OAASE,EAAWc,8BAAAA,OAC/DjC,EAAciB,QAEJ,cAAA,4BACZU,UAAWC,EAAOoC,gBAClBlB,QAAS,WAAQ,EACjBI,YAAa,SAAAH,GACXA,EAAEkB,gBACJ,MAKP/D,GAAemB,EAAAE,cAAA,MAAA,CAAKI,UAAWC,EAAOsC,cAAehE,OA7CzB,IAiDrC"}