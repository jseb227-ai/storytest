{"version":3,"file":"FieldLabel.js","sources":["../../../../../src/components/FieldLabel/FieldLabel.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { type FC, type ForwardedRef, forwardRef } from \"react\";\nimport Icon from \"../Icon/Icon\";\nimport type VibeComponentProps from \"../../types/VibeComponentProps\";\nimport styles from \"./FieldLabel.module.scss\";\n\nexport interface FieldLabelProps extends VibeComponentProps {\n  /**\n   * The icon displayed next to the label.\n   */\n  icon?: string | React.FunctionComponent | null;\n  /**\n   * The text content of the label.\n   */\n  labelText?: string;\n  /**\n   * The ID of the associated input element.\n   */\n  labelFor?: string;\n  /**\n   * Class name applied to the icon.\n   */\n  iconClassName?: string;\n  /**\n   * Class name applied to the label text.\n   */\n  labelClassName?: string;\n  /**\n   * If true, displays an asterisk to indicate a required field.\n   */\n  required?: boolean;\n  /**\n   * The HTML for attribute of the associated input element.\n   */\n  htmlFor?: string;\n}\n\nconst FieldLabel: FC<FieldLabelProps> = forwardRef(\n  (\n    {\n      className,\n      icon = \"\",\n      labelText = \"\",\n      labelFor = \"\",\n      iconClassName = \"\",\n      labelClassName = \"\",\n      required = false,\n      id = \"\",\n      htmlFor = \"\"\n    },\n    ref: ForwardedRef<HTMLLabelElement>\n  ) => {\n    if (!labelText) {\n      return null;\n    }\n\n    return (\n      <section className={cx(styles.labelComponentWrapper, className)}>\n        <Icon icon={icon} className={cx(styles.labelComponentIcon, iconClassName)} id={labelFor} iconType=\"font\" />\n        <label\n          id={id}\n          htmlFor={labelFor || htmlFor}\n          ref={ref}\n          className={cx(styles.labelComponentText, labelClassName)}\n        >\n          {labelText}\n          {required && <span className={styles.required}> *</span>}\n        </label>\n      </section>\n    );\n  }\n);\n\nexport default FieldLabel;\n"],"names":["FieldLabel","forwardRef","_ref","ref","_ref$icon","icon","_ref$labelText","labelText","_ref$labelFor","labelFor","_ref$iconClassName","iconClassName","_ref$labelClassName","labelClassName","_ref$required","required","_ref$id","id","_ref$htmlFor","htmlFor","React","createElement","className","cx","styles","labelComponentWrapper","Icon","labelComponentIcon","iconType","labelComponentText"],"mappings":"0IAqCMA,IAAAA,EAAkCC,GACtC,SAAAC,EAYEC,GACE,IAXSC,EAAAF,EACTG,KAAAA,OAAO,IAAHD,EAAG,GAAEA,EAAAE,EAAAJ,EACTK,UAAAA,OAAY,IAAHD,EAAG,GAAEA,EAAAE,EAAAN,EACdO,SAAAA,OAAW,IAAHD,EAAG,GAAEA,EAAAE,EAAAR,EACbS,cAAAA,OAAgB,IAAHD,EAAG,GAAEA,EAAAE,EAAAV,EAClBW,eAAAA,OAAiB,IAAHD,EAAG,GAAEA,EAAAE,EAAAZ,EACnBa,SAAAA,OAAW,IAAHD,GAAQA,EAAAE,EAAAd,EAChBe,GAAAA,OAAK,IAAHD,EAAG,GAAEA,EAAAE,EAAAhB,EACPiB,QAAAA,OAAU,IAAHD,EAAG,GAAEA,EAId,OAAKX,EAKHa,EAASC,cAAA,UAAA,CAAAC,UAAWC,EAAGC,EAAOC,sBAjBrBvB,EAAToB,YAkBEF,EAACC,cAAAK,EAAK,CAAArB,KAAMA,EAAMiB,UAAWC,EAAGC,EAAOG,mBAAoBhB,GAAgBM,GAAIR,EAAUmB,SAAS,SAClGR,EACEC,cAAA,QAAA,CAAAJ,GAAIA,EACJE,QAASV,GAAYU,EACrBhB,IAAKA,EACLmB,UAAWC,EAAGC,EAAOK,mBAAoBhB,IAExCN,EACAQ,GAAYK,EAAMC,cAAA,OAAA,CAAAC,UAAWE,EAAOT,UAAmB,QAbrD,IAiBX"}