{"version":3,"file":"useItemsOverflow.js","sources":["../../../../../src/hooks/useItemsOverflow/useItemsOverflow.ts"],"sourcesContent":["import { type RefObject, useCallback, useState, useRef } from \"react\";\nimport useIsomorphicLayoutEffect from \"../ssr/useIsomorphicLayoutEffect\";\n\n/**\n * Custom hook that calculates how many items can fit in a container without overflowing\n */\nexport default function useItemsOverflow({\n  containerRef,\n  gap,\n  deductedSpaceRef,\n  itemRefs\n}: {\n  containerRef: RefObject<HTMLElement>;\n  gap: number;\n  deductedSpaceRef?: RefObject<HTMLElement>;\n  itemRefs: RefObject<HTMLElement>[];\n}) {\n  const [visibleCount, setVisibleCount] = useState<number>(itemRefs.length);\n  const itemWidthsRef = useRef<number[]>([]);\n  const deductedWidthRef = useRef<number>(0);\n  const isCalculatingRef = useRef(false);\n\n  const calculateFromCachedWidths = useCallback(() => {\n    const container = containerRef?.current;\n    if (!container || !itemRefs.length) {\n      setVisibleCount(itemRefs.length);\n      return;\n    }\n\n    const containerWidth = container.offsetWidth;\n    const deductedWidth = deductedWidthRef.current;\n    const availableWidth = containerWidth - deductedWidth;\n\n    let totalItemsWidth = 0;\n    let count = 0;\n\n    const maxIter = Math.min(itemRefs.length, itemWidthsRef.current.length);\n\n    for (let i = 0; i < maxIter; i++) {\n      const itemWidth = itemWidthsRef.current[i];\n      const itemWidthWithGap = i > 0 ? itemWidth + gap : itemWidth;\n\n      if (totalItemsWidth + itemWidthWithGap <= availableWidth) {\n        totalItemsWidth += itemWidthWithGap;\n        count++;\n      } else {\n        break;\n      }\n    }\n    setVisibleCount(count);\n  }, [containerRef, itemRefs, gap]);\n\n  const measureDeductedWidth = useCallback(() => {\n    if (deductedSpaceRef?.current) {\n      deductedWidthRef.current = deductedSpaceRef.current.getBoundingClientRect().width;\n    } else {\n      deductedWidthRef.current = 0;\n    }\n  }, [deductedSpaceRef]);\n\n  const measureAndCacheItems = useCallback(() => {\n    if (isCalculatingRef.current) return;\n    isCalculatingRef.current = true;\n\n    requestAnimationFrame(() => {\n      try {\n        const container = containerRef.current;\n        if (!container || !itemRefs.length) {\n          setVisibleCount(itemRefs.length);\n          return;\n        }\n\n        measureDeductedWidth();\n\n        const itemElements = itemRefs.map(ref => ref.current).filter(el => el !== null) as HTMLElement[];\n\n        if (itemElements.length === 0) {\n          setVisibleCount(0);\n          itemWidthsRef.current = [];\n          return;\n        }\n\n        itemWidthsRef.current = itemElements.map(item => item.getBoundingClientRect().width);\n        calculateFromCachedWidths();\n      } finally {\n        isCalculatingRef.current = false;\n      }\n    });\n  }, [containerRef, itemRefs, calculateFromCachedWidths, measureDeductedWidth]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (!containerRef.current) return;\n\n    const resizeObserver = new ResizeObserver(() => {\n      if (itemRefs.length > 0) {\n        if (itemWidthsRef.current.length) {\n          measureDeductedWidth();\n          calculateFromCachedWidths();\n        } else {\n          measureAndCacheItems();\n        }\n      } else {\n        setVisibleCount(0);\n        itemWidthsRef.current = [];\n      }\n    });\n\n    resizeObserver.observe(containerRef.current);\n\n    if (deductedSpaceRef?.current) {\n      resizeObserver.observe(deductedSpaceRef.current);\n    }\n\n    return () => resizeObserver.disconnect();\n  }, [containerRef, deductedSpaceRef, measureDeductedWidth, calculateFromCachedWidths, measureAndCacheItems, itemRefs]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (itemRefs.length > 0) {\n      measureAndCacheItems();\n    } else {\n      setVisibleCount(0);\n      itemWidthsRef.current = [];\n    }\n  }, [itemRefs, measureAndCacheItems]);\n\n  return visibleCount;\n}\n"],"names":["useItemsOverflow","_ref","containerRef","gap","deductedSpaceRef","itemRefs","_useState","useState","length","_useState2","_slicedToArray","visibleCount","setVisibleCount","itemWidthsRef","useRef","deductedWidthRef","isCalculatingRef","calculateFromCachedWidths","useCallback","container","current","availableWidth","offsetWidth","totalItemsWidth","count","maxIter","Math","min","i","itemWidth","itemWidthWithGap","measureDeductedWidth","getBoundingClientRect","width","measureAndCacheItems","requestAnimationFrame","itemElements","map","ref","filter","el","item","useIsomorphicLayoutEffect","resizeObserver","ResizeObserver","observe","disconnect"],"mappings":"gMAMwB,SAAAA,EAAgBC,GAUvC,IATCC,EAAYD,EAAZC,aACAC,EAAGF,EAAHE,IACAC,EAAgBH,EAAhBG,iBACAC,EAAQJ,EAARI,SAOAC,EAAwCC,EAAiBF,EAASG,QAAOC,EAAAC,EAAAJ,EAAA,GAAlEK,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAgBC,EAAiB,IACjCC,EAAmBD,EAAe,GAClCE,EAAmBF,GAAO,GAE1BG,EAA4BC,GAAY,WAC5C,IAAMC,EAAYjB,aAAA,EAAAA,EAAckB,QAChC,GAAKD,GAAcd,EAASG,OAA5B,CAcA,IATA,IAEMa,EAFiBF,EAAUG,YACXP,EAAiBK,QAGnCG,EAAkB,EAClBC,EAAQ,EAENC,EAAUC,KAAKC,IAAItB,EAASG,OAAQK,EAAcO,QAAQZ,QAEvDoB,EAAI,EAAOH,EAAJG,EAAaA,IAAK,CAChC,IAAMC,EAAYhB,EAAcO,QAAQQ,GAClCE,EAAmBF,EAAI,EAAIC,EAAY1B,EAAM0B,EAEnD,GAAIN,EAAkBO,EAAoBT,EAIxC,MAHAE,GAAmBO,EACnBN,GAIH,CACDZ,EAAgBY,EAtBf,MAFCZ,EAAgBP,EAASG,OAyB5B,GAAE,CAACN,EAAcG,EAAUF,IAEtB4B,EAAuBb,GAAY,WAErCH,EAAiBK,SADfhB,eAAAA,EAAkBgB,SACOhB,EAAiBgB,QAAQY,wBAAwBC,MAEjD,CAE/B,GAAG,CAAC7B,IAEE8B,EAAuBhB,GAAY,WACnCF,EAAiBI,UACrBJ,EAAiBI,SAAU,EAE3Be,uBAAsB,WACpB,IAEE,IADkBjC,EAAakB,UACZf,EAASG,OAE1B,YADAI,EAAgBP,EAASG,QAI3BuB,IAEA,IAAMK,EAAe/B,EAASgC,KAAI,SAAAC,GAAG,OAAIA,EAAIlB,OAAO,IAAEmB,QAAO,SAAAC,GAAE,OAAW,OAAPA,KAEnE,GAA4B,IAAxBJ,EAAa5B,OAGf,OAFAI,EAAgB,QAChBC,EAAcO,QAAU,IAI1BP,EAAcO,QAAUgB,EAAaC,KAAI,SAAAI,GAAI,OAAIA,EAAKT,wBAAwBC,SAC9EhB,GACD,CAAS,QACRD,EAAiBI,SAAU,CAC5B,CACH,IACD,GAAE,CAAClB,EAAcG,EAAUY,EAA2Bc,IAqCvD,OAnCAW,GAA0B,WACxB,GAAKxC,EAAakB,QAAlB,CAEA,IAAMuB,EAAiB,IAAIC,gBAAe,WACpCvC,EAASG,OAAS,EAChBK,EAAcO,QAAQZ,QACxBuB,IACAd,KAEAiB,KAGFtB,EAAgB,GAChBC,EAAcO,QAAU,GAE5B,IAQA,OANAuB,EAAeE,QAAQ3C,EAAakB,UAEhChB,eAAAA,EAAkBgB,UACpBuB,EAAeE,QAAQzC,EAAiBgB,SAGnC,WAAA,OAAMuB,EAAeG,YAAY,CAtBb,CAuB7B,GAAG,CAAC5C,EAAcE,EAAkB2B,EAAsBd,EAA2BiB,EAAsB7B,IAE3GqC,GAA0B,WACpBrC,EAASG,OAAS,EACpB0B,KAEAtB,EAAgB,GAChBC,EAAcO,QAAU,GAE5B,GAAG,CAACf,EAAU6B,IAEPvB,CACT"}