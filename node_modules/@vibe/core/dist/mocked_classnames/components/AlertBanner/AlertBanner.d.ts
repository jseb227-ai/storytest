import React, { type ReactElement } from "react";
import { AlertBannerBackgroundColor as AlertBannerBackgroundColorEnum } from "./AlertBannerConstants";
import { type AlertBannerBackgroundColor } from "./AlertBanner.types";
import { type AlertBannerLinkProps } from "./AlertBannerLink/AlertBannerLink";
import { type AlertBannerButtonProps } from "./AlertBannerButton/AlertBannerButton";
import { type AlertBannerTextProps } from "./AlertBannerText/AlertBannerText";
import { type VibeComponentProps } from "../../types";
type ChildrenType = ReactElement<AlertBannerButtonProps | AlertBannerLinkProps | AlertBannerTextProps>;
export interface AlertBannerProps extends VibeComponentProps {
    /**
     * The background color of the alert banner.
     */
    backgroundColor?: AlertBannerBackgroundColor;
    /**
     * If true, the close button is hidden.
     */
    isCloseHidden?: boolean;
    /**
     * The ARIA label of the alert banner for accessibility.
     */
    ariaLabel?: string;
    /**
     * The ARIA label of the close button for accessibility.
     */
    closeButtonAriaLabel?: string;
    /**
     * Callback fired when the close button is clicked.
     */
    onClose?: (event: React.MouseEvent<HTMLButtonElement>) => void;
    /**
     * The content of the alert banner.
     */
    children?: ChildrenType | ChildrenType[];
}
declare const _default: React.ForwardRefExoticComponent<AlertBannerProps & React.RefAttributes<HTMLElement>> & {
    backgroundColors: typeof AlertBannerBackgroundColorEnum;
};
export default _default;
