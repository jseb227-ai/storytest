import React from "react";
import { type ColorPickerValueOnly } from "../../ColorPicker.types";
import { type ColorShapes, type ColorPickerSizes } from "../../ColorPicker.types";
import { type SubIcon, type VibeComponentProps, type ElementContent, type ColorStyle } from "../../../../types";
export interface ColorPickerItemComponentProps extends VibeComponentProps {
    /**
     * The color value of the item.
     */
    color: ColorPickerValueOnly;
    /**
     * Callback fired when the color is clicked.
     */
    onColorClicked: (color: ColorPickerValueOnly) => void;
    /**
     * The style applied to the color.
     */
    colorStyle: ColorStyle;
    /**
     * If true, renders the color indicator without a background.
     */
    shouldRenderIndicatorWithoutBackground: boolean;
    /**
     * Icon displayed inside the color item.
     */
    ColorIndicatorIcon: SubIcon;
    /**
     * Icon displayed when the color is selected.
     */
    SelectedIndicatorIcon: SubIcon;
    /**
     * If true, the color is marked as selected.
     */
    isSelected: boolean;
    /**
     * The size of the color item.
     */
    colorSize: ColorPickerSizes;
    /**
     * Tooltip content for the color item.
     */
    tooltipContent: ElementContent;
    /**
     * If true, the color item is currently active.
     */
    isActive: boolean;
    /**
     * The shape of the color item.
     */
    colorShape: ColorShapes;
}
declare const ColorPickerItemComponent: React.ForwardRefExoticComponent<ColorPickerItemComponentProps & React.RefAttributes<HTMLElement>>;
export default ColorPickerItemComponent;
