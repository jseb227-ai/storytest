import React from "react";
import { BadgeAlignments as BadgeAlignmentsEnum, BadgeAnchor as BadgeAnchorEnum, BadgeType as BadgeTypeEnum } from "./BadgeConstants";
import { type BadgeAlignments, type BadgeAnchor, type BadgeType } from "./Badge.types";
import { type IndicatorProps } from "./Indicator/Indicator";
import { type CounterProps } from "../Counter/Counter";
import { type VibeComponentProps } from "../../types";
export interface BadgeBaseProps extends VibeComponentProps {
    /**
     * The position of the badge relative to its parent.
     */
    anchor?: BadgeAnchor;
    /**
     * The alignment style of the badge.
     */
    alignment?: BadgeAlignments;
    /**
     * The content the badge is attached to.
     */
    children: React.ReactNode;
}
interface CounterBadgeProps extends CounterProps {
    /**
     * The type of badge, set to `"counter"` for numeric values.
     */
    type: Extract<BadgeType, "counter">;
}
interface IndicatorBadgeProps extends IndicatorProps {
    /**
     * The type of badge, set to `"indicator"` for a simple dot.
     */
    type?: Extract<BadgeType, "indicator">;
}
export type BadgeProps = BadgeBaseProps & (CounterBadgeProps | IndicatorBadgeProps);
declare const _default: React.ForwardRefExoticComponent<BadgeProps & React.RefAttributes<HTMLElement>> & {
    types: typeof BadgeTypeEnum;
    alignments: typeof BadgeAlignmentsEnum;
    anchors: typeof BadgeAnchorEnum;
};
export default _default;
