{"version":3,"file":"AttentionBoxDefault.js","sources":["../../../../../../../src/components/next/AttentionBox/layouts/AttentionBoxDefault/AttentionBoxDefault.tsx"],"sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport { Text } from \"../../../../Text\";\nimport { Flex } from \"../../../../Flex\";\nimport AttentionBoxButton from \"../../components/AttentionBoxButton/AttentionBoxButton\";\nimport AttentionBoxLink from \"../../components/AttentionBoxLink/AttentionBoxLink\";\nimport AttentionBoxCloseButton from \"../../components/AttentionBoxCloseButton/AttentionBoxCloseButton\";\nimport AttentionBoxLeadingIcon from \"../../components/AttentionBoxLeadingIcon/AttentionBoxLeadingIcon\";\nimport styles from \"./AttentionBoxDefault.module.scss\";\nimport type { AttentionBoxLayoutSharedProps, AttentionBoxProps } from \"../../AttentionBox.types\";\n\nexport type AttentionBoxDefaultProps = AttentionBoxLayoutSharedProps & Pick<AttentionBoxProps, \"title\">;\n\nconst AttentionBoxDefault = ({\n  title,\n  icon,\n  iconType,\n  onClose,\n  closeButtonAriaLabel = \"Close\",\n  action,\n  link,\n  content\n}: AttentionBoxDefaultProps) => {\n  const hasActions = action || link;\n\n  return (\n    <div\n      className={cx(styles.container, {\n        [styles.hasIcon]: !!icon,\n        [styles.hasTitle]: !!title,\n        [styles.hasActions]: hasActions,\n        [styles.hasCloseButton]: !!onClose\n      })}\n    >\n      {icon && <AttentionBoxLeadingIcon icon={icon} iconType={iconType} className={styles.icon} />}\n\n      {title && (\n        <Text type=\"text1\" weight=\"medium\" className={styles.title}>\n          {title}\n        </Text>\n      )}\n\n      {!!onClose && (\n        <AttentionBoxCloseButton\n          onClose={onClose}\n          closeButtonAriaLabel={closeButtonAriaLabel}\n          className={styles.closeButton}\n        />\n      )}\n\n      <Text type=\"text2\" className={styles.text} ellipsis={false} element=\"p\">\n        {content}\n      </Text>\n\n      {hasActions && (\n        <Flex gap=\"medium\" className={styles.actions}>\n          {link && <AttentionBoxLink {...link} inlineText={false} />}\n          {action && <AttentionBoxButton {...action} />}\n        </Flex>\n      )}\n    </div>\n  );\n};\n\nexport default AttentionBoxDefault;\n"],"names":["AttentionBoxDefault","_ref","title","icon","iconType","onClose","_ref$closeButtonAriaL","closeButtonAriaLabel","action","link","content","hasActions","React","className","cx","styles","container","_defineProperty","hasIcon","hasTitle","hasCloseButton","createElement","AttentionBoxLeadingIcon","Text","type","weight","AttentionBoxCloseButton","closeButton","text","ellipsis","element","Flex","gap","actions","AttentionBoxLink","Object","assign","inlineText","AttentionBoxButton"],"mappings":"gkBAaA,IAAMA,EAAsB,SAAHC,GASM,IAR7BC,EAAKD,EAALC,MACAC,EAAIF,EAAJE,KACAC,EAAQH,EAARG,SACAC,EAAOJ,EAAPI,QAAOC,EAAAL,EACPM,qBAAAA,OAAuB,IAAHD,EAAG,QAAOA,EAC9BE,EAAMP,EAANO,OACAC,EAAIR,EAAJQ,KACAC,EAAOT,EAAPS,QAEMC,EAAaH,GAAUC,EAE7B,OACEG,uBACEC,UAAWC,EAAGC,EAAOC,UAASC,EAAAA,EAAAA,EAAAA,EAC3BF,CAAAA,EAAAA,EAAOG,UAAYf,GACnBY,EAAOI,WAAajB,GACpBa,EAAOJ,WAAaA,GACpBI,EAAOK,iBAAmBf,KAG5BF,GAAQS,EAACS,cAAAC,EAAwB,CAAAnB,KAAMA,EAAMC,SAAUA,EAAUS,UAAWE,EAAOZ,OAEnFD,GACCU,EAACS,cAAAE,GAAKC,KAAK,QAAQC,OAAO,SAASZ,UAAWE,EAAOb,OAClDA,KAIFG,GACDO,gBAACc,EAAuB,CACtBrB,QAASA,EACTE,qBAAsBA,EACtBM,UAAWE,EAAOY,cAItBf,EAACS,cAAAE,GAAKC,KAAK,QAAQX,UAAWE,EAAOa,KAAMC,UAAU,EAAOC,QAAQ,KACjEpB,GAGFC,GACCC,EAACS,cAAAU,EAAK,CAAAC,IAAI,SAASnB,UAAWE,EAAOkB,SAClCxB,GAAQG,gBAACsB,EAAgBC,OAAAC,OAAA,CAAA,EAAK3B,EAAM,CAAA4B,YAAY,KAChD7B,GAAUI,EAACS,cAAAiB,EAAuBH,OAAAC,OAAA,CAAA,EAAA5B,KAK7C"}