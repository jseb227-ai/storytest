{"version":3,"file":"AttentionBox.js","sources":["../../../../../src/components/next/AttentionBox/AttentionBox.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport cx from \"classnames\";\nimport type { AttentionBoxProps, AttentionBoxRole } from \"./AttentionBox.types\";\nimport AttentionBoxDefault from \"./layouts/AttentionBoxDefault/AttentionBoxDefault\";\nimport AttentionBoxCompact from \"./layouts/AttentionBoxCompact/AttentionBoxCompact\";\nimport { resolveAttentionBoxIcon } from \"./utils/iconUtils\";\nimport { ComponentDefaultTestId } from \"../../../tests/constants\";\nimport { getTestId } from \"../../../tests/test-ids-utils\";\nimport styles from \"./AttentionBox.module.scss\";\n\nconst AttentionBox = forwardRef(\n  (\n    {\n      compact = false,\n      title,\n      animate = true,\n      icon,\n      iconType = \"svg\",\n      type = \"primary\",\n      children,\n      text,\n      action,\n      link,\n      id,\n      onClose,\n      closeButtonAriaLabel,\n      className,\n      \"data-testid\": dataTestId\n    }: AttentionBoxProps,\n    ref: React.ForwardedRef<HTMLDivElement>\n  ) => {\n    const role: AttentionBoxRole = type === \"negative\" ? \"alert\" : \"status\";\n    const displayIcon = resolveAttentionBoxIcon(icon, type);\n    const content = children || text;\n\n    const baseClasses = cx(\n      styles.attention,\n      styles[type],\n      {\n        [styles.animate]: animate\n      },\n      className\n    );\n\n    const layoutSharedProps = {\n      onClose,\n      closeButtonAriaLabel,\n      action,\n      link,\n      icon: displayIcon,\n      iconType,\n      content\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={baseClasses}\n        role={role}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.ATTENTION_BOX, id)}\n      >\n        {compact ? (\n          <AttentionBoxCompact {...layoutSharedProps} />\n        ) : (\n          <AttentionBoxDefault title={title} {...layoutSharedProps} />\n        )}\n      </div>\n    );\n  }\n);\n\nexport default AttentionBox;\n"],"names":["AttentionBox","forwardRef","_ref","ref","_ref$compact","compact","title","_ref$animate","animate","_ref$iconType","iconType","_ref$type","type","children","text","action","link","id","onClose","closeButtonAriaLabel","className","dataTestId","role","displayIcon","resolveAttentionBoxIcon","icon","content","baseClasses","cx","styles","attention","_defineProperty","layoutSharedProps","React","createElement","getTestId","ComponentDefaultTestId","ATTENTION_BOX","AttentionBoxCompact","Object","assign","AttentionBoxDefault"],"mappings":"kgBAUMA,IAAAA,EAAeC,GACnB,SAAAC,EAkBEC,GACE,IAAAC,EAAAF,EAjBAG,QAAAA,OAAU,IAAHD,GAAQA,EACfE,EAAKJ,EAALI,MAAKC,EAAAL,EACLM,QAAAA,OAAU,IAAHD,GAAOA,EACVE,EAAAP,EACJQ,SAAAA,OAAW,IAAHD,EAAG,MAAKA,EAAAE,EAAAT,EAChBU,KAAAA,OAAO,IAAHD,EAAG,UAASA,EAChBE,EAAQX,EAARW,SACAC,EAAIZ,EAAJY,KACAC,EAAMb,EAANa,OACAC,EAAId,EAAJc,KACAC,EAAEf,EAAFe,GACAC,EAAOhB,EAAPgB,QACAC,EAAoBjB,EAApBiB,qBACAC,EAASlB,EAATkB,UACeC,EAAUnB,EAAzB,eAIIoB,EAAkC,aAATV,EAAsB,QAAU,SACzDW,EAAcC,EAhBdtB,EAAJuB,KAgBgDb,GAC5Cc,EAAUb,GAAYC,EAEtBa,EAAcC,EAClBC,EAAOC,UACPD,EAAOjB,GAAKmB,KAETF,EAAOrB,QAAUA,GAEpBY,GAGIY,EAAoB,CACxBd,QAAAA,EACAC,qBAAAA,EACAJ,OAAAA,EACAC,KAAAA,EACAS,KAAMF,EACNb,SAAAA,EACAgB,QAAAA,GAGF,OACEO,EACEC,cAAA,MAAA,CAAA/B,IAAKA,EACLiB,UAAWO,EACXL,KAAMA,EACNL,GAAIA,EAAE,cACOI,GAAcc,EAAUC,EAAuBC,cAAepB,IAE1EZ,EACC4B,EAAAC,cAACI,EAAmBC,OAAAC,OAAA,CAAA,EAAKR,IAEzBC,EAACC,cAAAO,EAAoBF,OAAAC,OAAA,CAAAlC,MAAOA,GAAW0B,IAI/C"}