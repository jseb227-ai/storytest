{"version":3,"file":"useDropdownMultiSelect.js","sources":["../../../../../src/components/DropdownNew/hooks/useDropdownMultiSelect.ts"],"sourcesContent":["import { useMemo, useCallback } from \"react\";\nimport { useMultipleSelection, useSelect } from \"downshift\";\nimport useDropdownFiltering from \"./useDropdownFiltering\";\nimport { type DropdownGroupOption } from \"../Dropdown.types\";\nimport { type BaseListItemData } from \"../../BaseListItem\";\n\nfunction useDropdownMultiSelect<T extends BaseListItemData<Record<string, unknown>>>(\n  options: DropdownGroupOption<T>,\n  selectedItems: T[],\n  setSelectedItems: (items: T[]) => void,\n  isMenuOpen: boolean,\n  autoFocus?: boolean,\n  defaultValue?: T[],\n  value?: T[],\n  onChange?: (options: T[]) => void,\n  onMenuOpen?: () => void,\n  onMenuClose?: () => void,\n  onOptionSelect?: (option: T) => void,\n  showSelectedOptions?: boolean,\n  filterOption?: (option: T, inputValue: string) => boolean\n) {\n  const currentSelectedItems = value !== undefined ? value : selectedItems;\n\n  const { filteredOptions } = useDropdownFiltering<T>(options, filterOption, showSelectedOptions, currentSelectedItems);\n\n  const flatOptions = useMemo(() => filteredOptions.flatMap(group => group.options), [filteredOptions]);\n\n  const { getSelectedItemProps, addSelectedItem, removeSelectedItem, getDropdownProps } = useMultipleSelection<T>({\n    selectedItems: currentSelectedItems,\n    initialSelectedItems: defaultValue,\n    onSelectedItemsChange: ({ selectedItems: newSelected }) => {\n      if (value === undefined) {\n        setSelectedItems(newSelected || []);\n      }\n      onChange?.(newSelected || []);\n    }\n  });\n\n  const {\n    isOpen,\n    highlightedIndex,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    reset: downshiftReset,\n    openMenu,\n    toggleMenu,\n    closeMenu\n  } = useSelect<T>({\n    items: flatOptions,\n    itemToString: item => item?.label ?? \"\",\n    isItemDisabled: item => Boolean(item.disabled),\n    selectedItem: null,\n    isOpen: isMenuOpen,\n    initialIsOpen: autoFocus,\n    onSelectedItemChange: ({ selectedItem: newSelectedItem }) => {\n      if (!newSelectedItem) return;\n      const existingItem = currentSelectedItems.find(item => item.value === newSelectedItem.value);\n      if (existingItem) {\n        removeSelectedItem(existingItem);\n      } else {\n        addSelectedItem(newSelectedItem);\n      }\n      onOptionSelect?.(newSelectedItem);\n    },\n    stateReducer: (state, actionAndChanges) => {\n      const { type, changes } = actionAndChanges;\n      switch (type) {\n        case useSelect.stateChangeTypes.ItemClick:\n          return {\n            ...changes,\n            isOpen: true\n          };\n        default:\n          return changes;\n      }\n    },\n    onIsOpenChange: ({ isOpen }) => {\n      isOpen ? onMenuOpen?.() : onMenuClose?.();\n    }\n  });\n\n  const reset = useCallback(() => {\n    if (value === undefined) {\n      setSelectedItems([]);\n    }\n    downshiftReset();\n    onChange?.([]);\n  }, [value, setSelectedItems, downshiftReset, onChange]);\n\n  const getInputProps = () => ({});\n\n  return {\n    isOpen,\n    inputValue: \"\",\n    highlightedIndex,\n    selectedItems: currentSelectedItems,\n    getSelectedItemProps,\n    addSelectedItem,\n    removeSelectedItem,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getInputProps,\n    getItemProps,\n    reset,\n    filteredOptions,\n    openMenu,\n    toggleMenu,\n    closeMenu,\n    getDropdownProps\n  };\n}\n\nexport default useDropdownMultiSelect;\n"],"names":["useDropdownMultiSelect","options","selectedItems","setSelectedItems","isMenuOpen","autoFocus","defaultValue","value","onChange","onMenuOpen","onMenuClose","onOptionSelect","showSelectedOptions","filterOption","currentSelectedItems","undefined","filteredOptions","useDropdownFiltering","flatOptions","useMemo","flatMap","group","_useMultipleSelection","useMultipleSelection","initialSelectedItems","onSelectedItemsChange","_ref","newSelected","getSelectedItemProps","addSelectedItem","removeSelectedItem","getDropdownProps","_useSelect","useSelect","items","itemToString","item","_a","label","isItemDisabled","disabled","selectedItem","isOpen","initialIsOpen","onSelectedItemChange","_ref2","newSelectedItem","existingItem","find","stateReducer","state","actionAndChanges","changes","type","stateChangeTypes","ItemClick","Object","assign","onIsOpenChange","_ref3","highlightedIndex","getToggleButtonProps","getLabelProps","getMenuProps","getItemProps","downshiftReset","reset","openMenu","toggleMenu","closeMenu","useCallback","inputValue","getInputProps"],"mappings":"0JAMA,SAASA,EACPC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAMC,OAAiCC,IAAVR,EAAsBA,EAAQL,EAEnDc,EAAoBC,EAAwBhB,EAASY,EAAcD,EAAqBE,GAAxFE,gBAEFE,EAAcC,GAAQ,WAAA,OAAMH,EAAgBI,SAAQ,SAAAC,GAAK,OAAIA,EAAMpB,aAAU,CAACe,IAEpFM,EAAwFC,EAAwB,CAC9GrB,cAAeY,EACfU,qBAAsBlB,EACtBmB,sBAAuB,SAAAC,GAAmC,IAAjBC,EAAWD,EAA1BxB,mBACVa,IAAVR,GACFJ,EAAiBwB,GAAe,IAElCnB,SAAAA,EAAWmB,GAAe,GAC5B,IARMC,EAAoBN,EAApBM,qBAAsBC,EAAeP,EAAfO,gBAAiBC,EAAkBR,EAAlBQ,mBAAoBC,EAAgBT,EAAhBS,iBAWnEC,EAWIC,EAAa,CACfC,MAAOhB,EACPiB,aAAc,SAAAC,GAAO,IAAAC,EAAC,OAAe,QAAfA,EAAAD,eAAAA,EAAME,aAAS,IAAAD,EAAAA,EAAA,EAAE,EACvCE,eAAgB,SAAAH,GAAI,QAAYA,EAAKI,QAAS,EAC9CC,aAAc,KACdC,OAAQtC,EACRuC,cAAetC,EACfuC,qBAAsB,SAAAC,GAAsC,IAArBC,EAAeD,EAA7BJ,aACvB,GAAKK,EAAL,CACA,IAAMC,EAAejC,EAAqBkC,MAAK,SAAAZ,GAAI,OAAIA,EAAK7B,QAAUuC,EAAgBvC,SAClFwC,EACFjB,EAAmBiB,GAEnBlB,EAAgBiB,GAElBnC,SAAAA,EAAiBmC,EAPK,CAQvB,EACDG,aAAc,SAACC,EAAOC,GACpB,IAAcC,EAAYD,EAAZC,QACd,OAD0BD,EAAlBE,OAEDpB,EAAUqB,iBAAiBC,UAC9BC,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EACKL,GAAO,CACVV,QAAQ,IAGHU,CAEZ,EACDM,eAAgB,SAAAC,GAASA,EAANjB,OACRjC,SAAAA,IAAiBC,SAAAA,GAC5B,IAzCAgC,EAAMV,EAANU,OACAkB,EAAgB5B,EAAhB4B,iBACAC,EAAoB7B,EAApB6B,qBACAC,EAAa9B,EAAb8B,cACAC,EAAY/B,EAAZ+B,aACAC,EAAYhC,EAAZgC,aACOC,EAAcjC,EAArBkC,MACAC,EAAQnC,EAARmC,SACAC,EAAUpC,EAAVoC,WACAC,EAASrC,EAATqC,UAmCIH,EAAQI,GAAY,gBACVvD,IAAVR,GACFJ,EAAiB,IAEnB8D,IACAzD,SAAAA,EAAW,GACZ,GAAE,CAACD,EAAOJ,EAAkB8D,EAAgBzD,IAI7C,MAAO,CACLkC,OAAAA,EACA6B,WAAY,GACZX,iBAAAA,EACA1D,cAAeY,EACfc,qBAAAA,EACAC,gBAAAA,EACAC,mBAAAA,EACA+B,qBAAAA,EACAC,cAAAA,EACAC,aAAAA,EACAS,cAboB,WAAH,MAAU,IAc3BR,aAAAA,EACAE,MAAAA,EACAlD,gBAAAA,EACAmD,SAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAtC,iBAAAA,EAEJ"}