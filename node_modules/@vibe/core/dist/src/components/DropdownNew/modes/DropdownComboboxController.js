import{slicedToArray as e}from"../../../../_virtual/_rollupPluginBabelHelpers.js";import o,{useState as n}from"react";import l from"../hooks/useDropdownCombobox.js";import t from"../components/DropdownWrapperUI.js";var i=function(i){var u=i.options,r=i.isMenuOpen,s=i.autoFocus,a=i.closeMenuOnSelect,d=void 0===a||a,c=i.defaultValue,p=i.value,g=i.inputValue,m=i.onChange,v=i.onInputChange,f=i.onMenuClose,O=i.onMenuOpen,b=i.onOptionSelect,I=i.filterOption,h=i.showSelectedOptions,P=void 0===h||h,M=i.clearable,w=void 0===M||M,j=i.searchable,x=void 0===j||j,B=i.multi,C=void 0!==B&&B,S=i.dropdownRef,y=i.onFocus,D=i.onBlur,F=i.onKeyDown,V=i.onClear,K=i.loading,R=void 0!==K&&K,T=i.size,z=void 0===T?"medium":T,L=i.readOnly,_=i.disabled,k=n(!1),A=e(k,2),E=A[0],H=A[1],U=l(u,r,s,d,c,p,g,m,v,f,O,(function(e){null==b||b(e),e&&H(!1)}),I,P),W=U.isOpen,q=U.inputValue,G=U.highlightedIndex,J=U.getToggleButtonProps,N=U.getLabelProps,Q=U.getMenuProps,X=U.getItemProps,Y=U.getInputProps,Z=U.reset,$=U.filteredOptions,ee=U.selectedItem,oe=U.toggleMenu,ne=Object.assign(Object.assign({},i),{isOpen:W,inputValue:null!=q?q:null,highlightedIndex:G,selectedItem:ee,selectedItems:[],filteredOptions:$,getToggleButtonProps:J,getLabelProps:N,getMenuProps:Q,getItemProps:X,getInputProps:function(e){return Y(Object.assign(Object.assign({},e||{}),{disabled:L||_,onFocus:function(o){var n;H(!0),null==y||y(o),null===(n=null==e?void 0:e.onFocus)||void 0===n||n.call(e,o)},onBlur:function(o){var n;H(!1),null==D||D(o),null===(n=null==e?void 0:e.onBlur)||void 0===n||n.call(e,o)},onKeyDown:function(o){var n;null==F||F(o),null===(n=null==e?void 0:e.onKeyDown)||void 0===n||n.call(e,o)}}))},reset:Z,contextOnClear:function(){Z(),null==V||V()},contextOnOptionRemove:function(){},addSelectedItem:void 0,removeSelectedItem:void 0,isFocused:E,clearable:w,searchable:x,multi:C,closeMenuOnSelect:d,size:z,toggleMenu:oe,loading:R});return o.createElement(t,{contextValue:ne,dropdownRef:S})};export{i as default};
//# sourceMappingURL=DropdownComboboxController.js.map
