{"version":3,"file":"DropdownSelectController.js","sources":["../../../../../src/components/DropdownNew/modes/DropdownSelectController.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { type DropdownSingleControllerProps } from \"../Dropdown.types\";\nimport useDropdownSelect from \"../hooks/useDropdownSelect\";\nimport { type BaseListItemData } from \"../../BaseListItem\";\nimport { type DropdownContextProps } from \"../context/DropdownContext.types\";\nimport DropdownWrapperUI from \"../components/DropdownWrapperUI\";\n\nconst DropdownSelectController = <Item extends BaseListItemData<Record<string, unknown>>>(\n  props: DropdownSingleControllerProps<Item>\n) => {\n  const {\n    options,\n    autoFocus,\n    isMenuOpen: isMenuOpenProp,\n    defaultValue,\n    value,\n    onChange,\n    onMenuOpen,\n    onMenuClose,\n    onOptionSelect,\n    showSelectedOptions = true,\n    filterOption,\n    clearable = true,\n    searchable = false,\n    multi = false,\n    dropdownRef,\n    onClear,\n    onFocus,\n    onBlur,\n    loading = false,\n    size = \"medium\"\n  } = props;\n\n  const [isFocused, setIsFocused] = useState(false);\n\n  const {\n    isOpen,\n    highlightedIndex,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    reset: hookReset,\n    toggleMenu,\n    filteredOptions,\n    selectedItem: hookSelectedItem\n  } = useDropdownSelect<Item>(\n    options,\n    autoFocus,\n    isMenuOpenProp,\n    defaultValue,\n    value,\n    onChange,\n    onMenuOpen,\n    onMenuClose,\n    onOptionSelect,\n    showSelectedOptions,\n    filterOption\n  );\n\n  const contextValue: DropdownContextProps<Item> = {\n    ...props,\n    isOpen,\n    highlightedIndex,\n    selectedItem: hookSelectedItem,\n    filteredOptions,\n    getToggleButtonProps: (toggleOptions?: Record<string, any>) => {\n      return getToggleButtonProps({\n        ...(toggleOptions || {}),\n        disabled: props.readOnly || props.disabled,\n        onFocus: (event: React.FocusEvent<HTMLDivElement>) => {\n          setIsFocused(true);\n          onFocus?.(event);\n        },\n        onBlur: (event: React.FocusEvent<HTMLDivElement>) => {\n          setIsFocused(false);\n          onBlur?.(event);\n        }\n      });\n    },\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    reset: hookReset,\n    inputValue: null,\n    selectedItems: [],\n    addSelectedItem: undefined,\n    removeSelectedItem: undefined,\n    contextOnClear: () => {\n      hookReset();\n      onClear?.();\n    },\n    contextOnOptionRemove: () => {},\n    clearable,\n    searchable,\n    multi,\n    autoFocus,\n    onClear,\n    size,\n    toggleMenu,\n    isFocused,\n    loading\n  };\n\n  return <DropdownWrapperUI contextValue={contextValue} dropdownRef={dropdownRef} />;\n};\n\nexport default DropdownSelectController;\n"],"names":["DropdownSelectController","props","options","autoFocus","isMenuOpenProp","isMenuOpen","defaultValue","value","onChange","onMenuOpen","onMenuClose","onOptionSelect","_props$showSelectedOp","showSelectedOptions","filterOption","_props$clearable","clearable","_props$searchable","searchable","_props$multi","multi","dropdownRef","onClear","onFocus","onBlur","_props$loading","loading","_props$size","size","_useState","useState","_useState2","_slicedToArray","isFocused","setIsFocused","_useDropdownSelect","useDropdownSelect","isOpen","highlightedIndex","getToggleButtonProps","getLabelProps","getMenuProps","getItemProps","hookReset","reset","toggleMenu","filteredOptions","hookSelectedItem","selectedItem","contextValue","Object","assign","toggleOptions","disabled","readOnly","event","inputValue","selectedItems","addSelectedItem","undefined","removeSelectedItem","contextOnClear","contextOnOptionRemove","React","createElement","DropdownWrapperUI"],"mappings":"qNAOA,IAAMA,EAA2B,SAC/BC,GAEA,IACEC,EAoBED,EApBFC,QACAC,EAmBEF,EAnBFE,UACYC,EAkBVH,EAlBFI,WACAC,EAiBEL,EAjBFK,aACAC,EAgBEN,EAhBFM,MACAC,EAeEP,EAfFO,SACAC,EAcER,EAdFQ,WACAC,EAaET,EAbFS,YACAC,EAYEV,EAZFU,eAAcC,EAYZX,EAXFY,oBAAAA,OAAsB,IAAHD,GAAOA,EAC1BE,EAUEb,EAVFa,aAAYC,EAUVd,EATFe,UAAAA,OAAY,IAAHD,GAAOA,EAAAE,EASdhB,EARFiB,WAAAA,OAAa,IAAHD,GAAQA,EAAAE,EAQhBlB,EAPFmB,MAAAA,OAAQ,IAAHD,GAAQA,EACbE,EAMEpB,EANFoB,YACAC,EAKErB,EALFqB,QACAC,EAIEtB,EAJFsB,QACAC,EAGEvB,EAHFuB,OAAMC,EAGJxB,EAFFyB,QAAAA,OAAU,IAAHD,GAAQA,EAAAE,EAEb1B,EADF2B,KAAAA,OAAO,IAAHD,EAAG,SAAQA,EAGjBE,EAAkCC,GAAS,GAAMC,EAAAC,EAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAE9BI,EAWIC,EACFlC,EACAC,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,GArBAuB,EAAMF,EAANE,OACAC,EAAgBH,EAAhBG,iBACAC,EAAoBJ,EAApBI,qBACAC,EAAaL,EAAbK,cACAC,EAAYN,EAAZM,aACAC,EAAYP,EAAZO,aACOC,EAASR,EAAhBS,MACAC,EAAUV,EAAVU,WACAC,EAAeX,EAAfW,gBACcC,EAAgBZ,EAA9Ba,aAeIC,EAAYC,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EACblD,GAAK,CACRoC,OAAAA,EACAC,iBAAAA,EACAU,aAAcD,EACdD,gBAAAA,EACAP,qBAAsB,SAACa,GACrB,OAAOb,iCACDa,GAAiB,CAAA,GACrB,CAAAC,SAAUpD,EAAMqD,UAAYrD,EAAMoD,SAClC9B,QAAS,SAACgC,GACRrB,GAAa,GACbX,SAAAA,EAAUgC,EACX,EACD/B,OAAQ,SAAC+B,GACPrB,GAAa,GACbV,SAAAA,EAAS+B,EACX,IAEH,EACDf,cAAAA,EACAC,aAAAA,EACAC,aAAAA,EACAE,MAAOD,EACPa,WAAY,KACZC,cAAe,GACfC,qBAAiBC,EACjBC,wBAAoBD,EACpBE,eAAgB,WACdlB,IACArB,SAAAA,GACD,EACDwC,sBAAuB,WAAQ,EAC/B9C,UAAAA,EACAE,WAAAA,EACAE,MAAAA,EACAjB,UAAAA,EACAmB,QAAAA,EACAM,KAAAA,EACAiB,WAAAA,EACAZ,UAAAA,EACAP,QAAAA,IAGF,OAAOqC,EAAAC,cAACC,EAAiB,CAAChB,aAAcA,EAAc5B,YAAaA,GACrE"}