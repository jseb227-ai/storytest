{"version":3,"file":"MultiValueContainer.js","sources":["../../../../../../src/components/Dropdown/components/MultiValueContainer/MultiValueContainer.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { components } from \"react-select\";\nimport cx from \"classnames\";\nimport { useHiddenOptionsData } from \"../../hooks/useHiddenOptionsData\";\nimport Counter from \"../../../Counter/Counter\";\nimport Dialog from \"../../../Dialog/Dialog\";\nimport DialogContentContainer from \"../../../DialogContentContainer/DialogContentContainer\";\nimport Chips from \"../../../Chips/Chips\";\nimport classes from \"./MultiValueContainer.module.scss\";\n\nconst DIALOG_OFFSET_Y = 5;\n\nexport default function Container({ children, selectProps, ...otherProps }) {\n  const {\n    isDisabled,\n    placeholder,\n    inputValue,\n    selectProps: customProps = {},\n    withMandatoryDefaultOptions,\n    readOnly\n  } = selectProps;\n  const { selectedOptions, onSelectedDelete, isMultiline, popupsContainerSelector, size, dialogClassName } =\n    customProps;\n  const clickHandler = children[1];\n  const [ref, setRef] = useState();\n  const [isCounterShown, setIsCounterShown] = useState(false);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const showPlaceholder = selectedOptions.length === 0 && !inputValue;\n  const chipWrapperClassName = classes[\"chip-with-input-wrapper\"];\n  const chipClassName = cx(\n    isMultiline ? classes[\"multiselect-chip-multi-line\"] : classes[`multiselect-chip-single-line-${size}`],\n    { [classes[\"multiselect-chip-disabled\"]]: isDisabled }\n  );\n\n  const { overflowIndex, hiddenOptionsCount } = useHiddenOptionsData({\n    isMultiline,\n    ref,\n    chipClassName,\n    chipWrapperClassName,\n    selectedOptionsCount: selectedOptions.length,\n    isCounterShown\n  });\n\n  useEffect(() => {\n    setIsCounterShown(hiddenOptionsCount > 0);\n  }, [hiddenOptionsCount]);\n\n  const handleDialogShow = useCallback(() => {\n    setIsDialogOpen(true);\n  }, []);\n\n  const handleDialogHide = useCallback(() => {\n    setIsDialogOpen(false);\n  }, []);\n\n  const onDelete = useCallback(\n    option => {\n      onSelectedDelete(option.value, { action: \"remove-value\", removedValue: option });\n    },\n    [onSelectedDelete]\n  );\n\n  const DropdownChipColors = [\"primary\", \"negative\", \"positive\"];\n  const renderOptions = useCallback(\n    (from = 0, to = selectedOptions.length) =>\n      selectedOptions.map((option, index) => {\n        const overrideChipColor = DropdownChipColors.includes(option.chipColor) ? option.chipColor : \"primary\";\n        return index >= from && index < to ? (\n          <Chips\n            data-testid=\"value-container-chip\"\n            key={option.value}\n            className={cx(classes.chips, chipClassName)}\n            noAnimation\n            disabled={isDisabled}\n            id={option.value}\n            label={option.label}\n            onDelete={() => onDelete(option)}\n            disableClickableBehavior\n            onMouseDown={e => {\n              e.stopPropagation();\n            }}\n            readOnly={readOnly || (withMandatoryDefaultOptions && option.isMandatory)}\n            allowTextSelection={readOnly}\n            leftRenderer={option.leftRenderer}\n            rightRenderer={option.rightRenderer}\n            leftAvatar={option.leftAvatar}\n            leftIcon={option.leftIcon}\n            color={overrideChipColor}\n          />\n        ) : null;\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [selectedOptions, chipClassName, isDisabled, readOnly, withMandatoryDefaultOptions, onDelete, size]\n  );\n\n  return (\n    <components.ValueContainer selectProps={selectProps} {...otherProps}>\n      <div\n        className={classes[\"value-container\"]}\n        onTouchEndCapture={e => {\n          e.stopPropagation();\n        }}\n      >\n        {showPlaceholder && (\n          <div className={classes[\"placeholder-container\"]}>\n            <components.Placeholder {...otherProps}>{placeholder}</components.Placeholder>\n          </div>\n        )}\n        <div\n          className={cx(classes[\"value-container-chips\"], { [classes[\"without-placeholder\"]]: !showPlaceholder })}\n          ref={newRef => setRef(newRef)}\n          data-testid=\"value-container-chips\"\n        >\n          {isCounterShown ? (\n            <>\n              {renderOptions(0, overflowIndex - 1)}\n              <div className={chipWrapperClassName}>\n                {renderOptions(overflowIndex - 1, overflowIndex)}\n                {clickHandler}\n              </div>\n              {renderOptions(overflowIndex)}\n            </>\n          ) : (\n            <>\n              {renderOptions(0, selectedOptions.length - 1)}\n              <div className={chipWrapperClassName}>\n                {renderOptions(selectedOptions.length - 1)}\n                {clickHandler}\n              </div>\n            </>\n          )}\n        </div>\n        <div>\n          {isCounterShown && (\n            <Dialog\n              content={() => (\n                <DialogContentContainer\n                  className={classes.valueDialogContent}\n                  onMouseDown={e => {\n                    e.stopPropagation();\n                  }}\n                >\n                  {renderOptions(overflowIndex)}\n                </DialogContentContainer>\n              )}\n              containerSelector={popupsContainerSelector}\n              tooltip\n              showTrigger=\"click\"\n              hideTrigger=\"clickoutside\"\n              position=\"bottom\"\n              moveBy={{ main: DIALOG_OFFSET_Y }}\n              wrapperClassName={dialogClassName}\n              onDialogDidShow={handleDialogShow}\n              onDialogDidHide={handleDialogHide}\n            >\n              <Counter\n                kind=\"line\"\n                prefix=\"+\"\n                count={hiddenOptionsCount}\n                counterClassName={cx(classes.dropdownCounter, { [classes.active]: isDialogOpen })}\n                onMouseDown={e => {\n                  e.stopPropagation();\n                }}\n                noAnimation\n              />\n            </Dialog>\n          )}\n        </div>\n      </div>\n    </components.ValueContainer>\n  );\n}\n"],"names":["Container","_ref","children","selectProps","otherProps","_objectWithoutProperties","_excluded","isDisabled","placeholder","inputValue","_selectProps$selectPr","customProps","withMandatoryDefaultOptions","readOnly","selectedOptions","onSelectedDelete","isMultiline","popupsContainerSelector","size","dialogClassName","clickHandler","_useState","useState","_useState2","_slicedToArray","ref","setRef","_useState3","_useState4","isCounterShown","setIsCounterShown","_useState5","_useState6","isDialogOpen","setIsDialogOpen","showPlaceholder","length","chipWrapperClassName","classes","chipClassName","cx","concat","_defineProperty","_useHiddenOptionsData","useHiddenOptionsData","selectedOptionsCount","overflowIndex","hiddenOptionsCount","useEffect","handleDialogShow","useCallback","handleDialogHide","onDelete","option","value","action","removedValue","DropdownChipColors","renderOptions","from","arguments","undefined","to","map","index","overrideChipColor","includes","chipColor","React","createElement","Chips","key","className","chips","noAnimation","disabled","id","label","disableClickableBehavior","onMouseDown","e","stopPropagation","isMandatory","allowTextSelection","leftRenderer","rightRenderer","leftAvatar","leftIcon","color","components","ValueContainer","_extends","onTouchEndCapture","Placeholder","newRef","Fragment","Dialog","content","DialogContentContainer","valueDialogContent","containerSelector","tooltip","showTrigger","hideTrigger","position","moveBy","main","wrapperClassName","onDialogDidShow","onDialogDidHide","Counter","kind","prefix","count","counterClassName","dropdownCounter","active"],"mappings":"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"}