{"version":3,"file":"BaseList.js","sources":["../../../../src/components/BaseList/BaseList.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport BaseListItem from \"../BaseListItem/BaseListItem\";\nimport styles from \"./BaseList.module.scss\";\nimport { type BaseListProps } from \"./BaseList.types\";\nimport { Flex } from \"../Flex\";\nimport { type TextType } from \"../Text\";\nimport Text from \"../Text/Text\";\nimport cx from \"classnames\";\nimport { Divider } from \"../Divider\";\n\nconst BaseList = forwardRef(\n  <Item extends Record<string, unknown>>(\n    {\n      options,\n      selectedItems,\n      highlightedIndex,\n      menuAriaLabel,\n      getMenuProps,\n      getItemProps,\n      size = \"medium\",\n      withGroupDivider = false,\n      dir = \"ltr\",\n      itemRenderer,\n      menuRenderer,\n      noOptionsMessage = \"No results\",\n      stickyGroupTitle = false,\n      renderOptions = true,\n      onScroll,\n      maxMenuHeight = 300\n    }: BaseListProps<Item>,\n    ref: React.Ref<HTMLUListElement>\n  ) => {\n    const textVariant: TextType = size === \"small\" ? \"text2\" : \"text1\";\n\n    const defaultContent = renderOptions ? (\n      options.every(group => group.options?.length === 0) ? (\n        <div role=\"status\">\n          {typeof noOptionsMessage === \"string\" ? (\n            <Flex justify=\"center\">\n              <BaseListItem component=\"div\" item={{ label: noOptionsMessage, value: \"\" }} size={size} readOnly />\n            </Flex>\n          ) : (\n            noOptionsMessage\n          )}\n        </div>\n      ) : (\n        options.map((group, groupIndex) => (\n          <React.Fragment key={group.label ?? groupIndex}>\n            {group.label && (\n              <li className={cx(styles.groupTitle, { [styles.sticky]: stickyGroupTitle })}>\n                <Text type={textVariant} color=\"inherit\">\n                  {group.label}\n                </Text>\n              </li>\n            )}\n            {group.options.map((option, itemIndex) => {\n              const itemProps = getItemProps?.({ item: option, index: option.index }) ?? {};\n              const isHighlighted =\n                highlightedIndex !== undefined && highlightedIndex === option.index && !option.disabled;\n              const isSelected =\n                selectedItems?.some(selectedItem => selectedItem?.value === option.value) && !option.disabled;\n\n              return (\n                <BaseListItem<Item>\n                  itemProps={itemProps}\n                  key={typeof option.value === \"string\" ? option.value : itemIndex}\n                  size={size}\n                  highlighted={isHighlighted}\n                  selected={isSelected}\n                  itemRenderer={itemRenderer}\n                  item={option}\n                  role=\"option\"\n                />\n              );\n            })}\n            {withGroupDivider && groupIndex < options.length - 1 && <Divider />}\n          </React.Fragment>\n        ))\n      )\n    ) : null;\n\n    return (\n      <ul\n        ref={ref}\n        dir={dir}\n        className={styles.wrapper}\n        {...getMenuProps?.({ \"aria-label\": menuAriaLabel })}\n        onScroll={onScroll}\n        style={{ maxHeight: maxMenuHeight }}\n      >\n        {menuRenderer && renderOptions\n          ? menuRenderer({\n              children: defaultContent,\n              filteredOptions: options,\n              selectedItem: selectedItems?.[0] || null,\n              selectedItems: selectedItems || []\n            })\n          : defaultContent}\n      </ul>\n    );\n  }\n);\n\nexport default BaseList as <Item extends Record<string, unknown>>(\n  props: BaseListProps<Item> & { ref?: React.Ref<HTMLUListElement> }\n) => React.ReactElement;\n"],"names":["BaseList","forwardRef","_ref","ref","options","selectedItems","highlightedIndex","menuAriaLabel","getMenuProps","getItemProps","_ref$size","size","_ref$withGroupDivider","withGroupDivider","_ref$dir","dir","itemRenderer","menuRenderer","_ref$noOptionsMessage","noOptionsMessage","_ref$stickyGroupTitle","stickyGroupTitle","_ref$renderOptions","renderOptions","onScroll","_ref$maxMenuHeight","maxMenuHeight","textVariant","defaultContent","every","group","_a","length","React","createElement","role","Flex","justify","BaseListItem","component","item","label","value","readOnly","map","groupIndex","Fragment","key","className","cx","styles","groupTitle","_defineProperty","sticky","Text","type","color","option","itemIndex","itemProps","index","isHighlighted","undefined","disabled","isSelected","some","selectedItem","highlighted","selected","Divider","Object","assign","wrapper","style","maxHeight","children","filteredOptions"],"mappings":"2UAUMA,IAAAA,EAAWC,GACf,SAAAC,EAmBEC,GACE,IAlBAC,EAAOF,EAAPE,QACAC,EAAaH,EAAbG,cACAC,EAAgBJ,EAAhBI,iBACAC,EAAaL,EAAbK,cACAC,EAAYN,EAAZM,aACAC,EAAYP,EAAZO,aAAYC,EAAAR,EACZS,KAAAA,OAAO,IAAHD,EAAG,SAAQA,EAAAE,EAAAV,EACfW,iBAAAA,OAAmB,IAAHD,GAAQA,EAAAE,EAAAZ,EACxBa,IAAAA,OAAM,IAAHD,EAAG,MAAKA,EACXE,EAAYd,EAAZc,aACAC,EAAYf,EAAZe,aAAYC,EAAAhB,EACZiB,iBAAAA,OAAmB,IAAHD,EAAG,aAAYA,EAAAE,EAAAlB,EAC/BmB,iBAAAA,OAAmB,IAAHD,GAAQA,EAAAE,EAAApB,EACxBqB,cAAAA,OAAgB,IAAHD,GAAOA,EACpBE,EAAQtB,EAARsB,SAAQC,EAAAvB,EACRwB,cAAAA,OAAgB,IAAHD,EAAG,IAAGA,EAIfE,EAAiC,UAAThB,EAAmB,QAAU,QAErDiB,EAAiBL,EACrBnB,EAAQyB,OAAM,SAAAC,GAAS,IAAAC,EAAA,OAA0B,KAAX,QAAfA,EAAAD,EAAM1B,eAAS,IAAA2B,OAAA,EAAAA,EAAAC,OAAY,IAChDC,EAAKC,cAAA,MAAA,CAAAC,KAAK,UACqB,iBAArBhB,EACNc,gBAACG,EAAI,CAACC,QAAQ,UACZJ,EAACC,cAAAI,GAAaC,UAAU,MAAMC,KAAM,CAAEC,MAAOtB,EAAkBuB,MAAO,IAAM/B,KAAMA,EAAMgC,eAG1FxB,GAIJf,EAAQwC,KAAI,SAACd,EAAOe,SAAe,OACjCZ,EAAAC,cAACD,EAAMa,SAAQ,CAACC,YAAKhB,EAAAD,EAAMW,qBAASI,GACjCf,EAAMW,OACLR,sBAAIe,UAAWC,EAAGC,EAAOC,WAAUC,EAAA,CAAA,EAAKF,EAAOG,OAAShC,KACtDY,EAAAC,cAACoB,EAAI,CAACC,KAAM5B,EAAa6B,MAAM,WAC5B1B,EAAMW,QAIZX,EAAM1B,QAAQwC,KAAI,SAACa,EAAQC,SACpBC,EAAqE,QAAzD5B,EAAAtB,aAAY,EAAZA,EAAe,CAAE+B,KAAMiB,EAAQG,MAAOH,EAAOG,eAAY,IAAA7B,EAAAA,EAAA,CAAA,EACrE8B,OACiBC,IAArBxD,GAAkCA,IAAqBmD,EAAOG,QAAUH,EAAOM,SAC3EC,GACJ3D,aAAa,EAAbA,EAAe4D,MAAK,SAAAC,GAAY,OAAIA,aAAY,EAAZA,EAAcxB,SAAUe,EAAOf,KAAK,OAAMe,EAAOM,SAEvF,OACE9B,EAACC,cAAAI,EACC,CAAAqB,UAAWA,EACXZ,IAA6B,iBAAjBU,EAAOf,MAAqBe,EAAOf,MAAQgB,EACvD/C,KAAMA,EACNwD,YAAaN,EACbO,SAAUJ,EACVhD,aAAcA,EACdwB,KAAMiB,EACNtB,KAAK,UAGV,IACAtB,GAAiCT,EAAQ4B,OAAS,EAA9Ba,GAAmCZ,EAACC,cAAAmC,EAAU,MAEtE,IAED,KAEJ,OACEpC,EACEC,cAAA,KAAAoC,OAAAC,OAAA,CAAApE,IAAKA,EACLY,IAAKA,EACLiC,UAAWE,EAAOsB,SACdhE,aAAA,EAAAA,EAAe,CAAE,aAAcD,IACnC,CAAAiB,SAAUA,EACViD,MAAO,CAAEC,UAAWhD,KAEnBT,GAAgBM,EACbN,EAAa,CACX0D,SAAU/C,EACVgD,gBAAiBxE,EACjB8D,cAAc7D,aAAA,EAAAA,EAAgB,KAAM,KACpCA,cAAeA,GAAiB,KAElCuB,EAGV"}