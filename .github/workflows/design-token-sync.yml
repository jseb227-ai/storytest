name: Design Token Sync & Auto-Update

on:
  # Manual trigger for testing
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run in dry-run mode (no changes applied)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

  # Webhook trigger from Figma (when set up)
  repository_dispatch:
    types: [figma-design-tokens-updated]

  # Scheduled check every 30 minutes during work hours
  schedule:
    - cron: '*/30 9-17 * * 1-5'  # Every 30 minutes, 9 AM to 5 PM, weekdays

env:
  NODE_VERSION: '18'
  DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}

jobs:
  detect-design-changes:
    name: 🎨 Detect Design Token Changes
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.fetch-tokens.outputs.has-changes }}
      changes-count: ${{ steps.fetch-tokens.outputs.changes-count }}
      changes-summary: ${{ steps.fetch-tokens.outputs.changes }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎨 Fetch design tokens from Figma
        id: fetch-tokens
        env:
          FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
          FIGMA_FILE_KEY: ${{ secrets.FIGMA_FILE_KEY }}
          GITHUB_ACTIONS: true
        run: |
          echo "🎨 Fetching latest design tokens from Figma..."
          node scripts/fetch-design-tokens.js
        continue-on-error: false

      - name: 📊 Upload token changes as artifact
        if: steps.fetch-tokens.outputs.has-changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: design-tokens-${{ github.run_id }}
          path: |
            tokens/design-tokens.json
            tokens/design-tokens.previous.json
          retention-days: 30

  generate-style-updates:
    name: 🤖 Generate Style Updates
    runs-on: ubuntu-latest
    needs: detect-design-changes
    if: needs.detect-design-changes.outputs.has-changes == 'true'
    outputs:
      updates-applied: ${{ steps.generate-updates.outputs.updates-applied }}
      plan-path: ${{ steps.generate-updates.outputs.plan-path }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📊 Download design tokens
        uses: actions/download-artifact@v4
        with:
          name: design-tokens-${{ github.run_id }}
          path: tokens/

      - name: 🤖 Generate AI-powered style updates
        id: generate-updates
        env:
          DRY_RUN: ${{ env.DRY_RUN }}
          GITHUB_ACTIONS: true
        run: |
          echo "🤖 Generating intelligent style updates..."
          node scripts/generate-style-updates.js

      - name: 📁 Upload update plan
        uses: actions/upload-artifact@v4
        with:
          name: update-plan-${{ github.run_id }}
          path: generated-updates/
          retention-days: 30

      - name: 📝 Commit style changes
        if: steps.generate-updates.outputs.updates-applied == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Design Token Sync Bot"
          git add .
          git diff --staged --quiet || git commit -m "🎨 Auto-update styles from Figma design tokens

          📊 Changes detected: ${{ needs.detect-design-changes.outputs.changes-count }}
          🤖 Generated by Design2Code automation

          Co-authored-by: Figma Design System <design@figma.com>"

  build-and-test:
    name: 🏗️ Build & Test Updates
    runs-on: ubuntu-latest
    needs: [detect-design-changes, generate-style-updates]
    if: needs.detect-design-changes.outputs.has-changes == 'true'

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📊 Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: design-tokens-${{ github.run_id }}
          path: tokens/

      - name: 📊 Download update plan
        uses: actions/download-artifact@v4
        with:
          name: update-plan-${{ github.run_id }}
          path: generated-updates/

      - name: 🏗️ Build Storybook
        run: |
          echo "🏗️ Building Storybook with updated styles..."
          npm run build-storybook
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'

      - name: 🎯 Run Chromatic visual tests
        uses: chromaui/action@v11
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          buildScriptName: build-storybook
          exitZeroOnChanges: false  # We want to know about visual changes
          exitOnceUploaded: true
        id: chromatic

      - name: 📊 Comment visual test results
        if: github.event_name == 'repository_dispatch'
        uses: actions/github-script@v7
        with:
          script: |
            const chromaticUrl = '${{ steps.chromatic.outputs.url }}';
            const changesCount = '${{ needs.detect-design-changes.outputs.changes-count }}';

            const comment = `## 🎨 Design Token Sync Results

            ### 📊 Summary
            - **Design Changes Detected:** ${changesCount}
            - **Chromatic Build:** [View Results](${chromaticUrl})
            - **Status:** ${{ job.status }}

            ### 🔍 Next Steps
            1. Review visual changes in Chromatic
            2. Approve or request changes
            3. Merge if everything looks good

            > 🤖 Generated by Design2Code automation`;

            // For repository_dispatch events, create an issue
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🎨 Design Token Sync - ${new Date().toISOString().split('T')[0]}`,
              body: comment,
              labels: ['design-tokens', 'automated']
            });

  create-pull-request:
    name: 📝 Create Pull Request
    runs-on: ubuntu-latest
    needs: [detect-design-changes, generate-style-updates, build-and-test]
    if: needs.detect-design-changes.outputs.has-changes == 'true' && needs.generate-style-updates.outputs.updates-applied == 'true' && !contains(github.event_name, 'schedule')

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 📊 Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: design-tokens-${{ github.run_id }}
          path: tokens/

      - name: 📊 Download update plan
        uses: actions/download-artifact@v4
        with:
          name: update-plan-${{ github.run_id }}
          path: generated-updates/

      - name: 🌿 Create feature branch
        run: |
          BRANCH_NAME="design-tokens/auto-sync-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: 📝 Apply changes and commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Design Token Sync Bot"

          # Add all changes
          git add .

          # Commit if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "🎨 Sync design tokens from Figma

            📊 Changes: ${{ needs.detect-design-changes.outputs.changes-count }} design tokens updated
            🤖 Auto-generated style updates applied
            🎯 Chromatic build triggered for visual testing

            Generated by Design2Code automation pipeline"

            git push origin "$BRANCH_NAME"
          fi

      - name: 📝 Create Pull Request
        uses: actions/github-script@v7
        with:
          script: |
            const changesCount = '${{ needs.detect-design-changes.outputs.changes-count }}';
            const branchName = process.env.BRANCH_NAME;

            const prBody = `## 🎨 Automated Design Token Sync

            This PR contains automated updates based on design token changes detected in Figma.

            ### 📊 Summary
            - **Design Changes:** ${changesCount} tokens updated
            - **Files Modified:** CSS variables, component styles
            - **Generated:** ${new Date().toISOString()}

            ### 🔍 What Changed
            - Design tokens extracted from Figma Variables API
            - CSS custom properties updated automatically
            - Component styles analyzed and updated where needed

            ### ✅ Automated Checks
            - [x] Design tokens fetched from Figma
            - [x] Style updates generated with AI
            - [x] Storybook built successfully
            - [x] Chromatic visual tests triggered

            ### 🎯 Next Steps
            1. Review the visual changes in Chromatic
            2. Test components in Storybook
            3. Approve and merge if everything looks good

            > 🤖 This PR was created automatically by the Design2Code pipeline`;

            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🎨 Design Token Sync - ${new Date().toISOString().split('T')[0]}`,
              head: branchName,
              base: 'main',
              body: prBody,
              draft: false
            });

            console.log(`Created PR #${pr.data.number}: ${pr.data.html_url}`);

  notify-completion:
    name: 📢 Notify Completion
    runs-on: ubuntu-latest
    needs: [detect-design-changes, generate-style-updates, build-and-test]
    if: always() && needs.detect-design-changes.outputs.has-changes == 'true'

    steps:
      - name: 📊 Generate summary
        run: |
          echo "## 🎨 Design2Code Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Changes Detected:** ${{ needs.detect-design-changes.outputs.changes-count }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Updates Applied:** ${{ needs.generate-style-updates.outputs.updates-applied }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Status:** ${{ needs.build-and-test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
          echo "- [Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "- [Repository](${{ github.server_url }}/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "> 🤖 Automated by Design2Code pipeline"